// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: notification/v1/notification.proto

package notificationpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 渠道类型枚举
type Channel int32

const (
	// 未指定渠道
	Channel_CHANNEL_UNSPECIFIED Channel = 0
	// 短信
	Channel_SMS Channel = 1
	// 邮件
	Channel_EMAIL Channel = 2
	// 站内信
	Channel_IN_APP Channel = 3
)

// Enum value maps for Channel.
var (
	Channel_name = map[int32]string{
		0: "CHANNEL_UNSPECIFIED",
		1: "SMS",
		2: "EMAIL",
		3: "IN_APP",
	}
	Channel_value = map[string]int32{
		"CHANNEL_UNSPECIFIED": 0,
		"SMS":                 1,
		"EMAIL":               2,
		"IN_APP":              3,
	}
)

func (x Channel) Enum() *Channel {
	p := new(Channel)
	*p = x
	return p
}

func (x Channel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Channel) Descriptor() protoreflect.EnumDescriptor {
	return file_notification_v1_notification_proto_enumTypes[0].Descriptor()
}

func (Channel) Type() protoreflect.EnumType {
	return &file_notification_v1_notification_proto_enumTypes[0]
}

func (x Channel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Channel.Descriptor instead.
func (Channel) EnumDescriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{0}
}

// 通知发送状态枚举
type SendStatus int32

const (
	// 未指定通知发送状态
	SendStatus_SEND_STATUS_UNSPECIFIED SendStatus = 0
	// 事务消息，准备阶段
	SendStatus_PREPARE SendStatus = 1
	// 事务消息，取消发送
	SendStatus_CANCELED SendStatus = 2
	// 等待发送，普通消息的默认状态，事务消息的确认发送状态（二者重合故用一个状态表示）
	SendStatus_PENDING SendStatus = 3
	// 发送成功
	SendStatus_SUCCEEDED SendStatus = 4
	// 发送失败
	SendStatus_FAILED SendStatus = 5
)

// Enum value maps for SendStatus.
var (
	SendStatus_name = map[int32]string{
		0: "SEND_STATUS_UNSPECIFIED",
		1: "PREPARE",
		2: "CANCELED",
		3: "PENDING",
		4: "SUCCEEDED",
		5: "FAILED",
	}
	SendStatus_value = map[string]int32{
		"SEND_STATUS_UNSPECIFIED": 0,
		"PREPARE":                 1,
		"CANCELED":                2,
		"PENDING":                 3,
		"SUCCEEDED":               4,
		"FAILED":                  5,
	}
)

func (x SendStatus) Enum() *SendStatus {
	p := new(SendStatus)
	*p = x
	return p
}

func (x SendStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_notification_v1_notification_proto_enumTypes[1].Descriptor()
}

func (SendStatus) Type() protoreflect.EnumType {
	return &file_notification_v1_notification_proto_enumTypes[1]
}

func (x SendStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendStatus.Descriptor instead.
func (SendStatus) EnumDescriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{1}
}

// 错误代码枚举
type ErrorCode int32

const (
	// 未指定错误码
	ErrorCode_ERROR_CODE_UNSPECIFIED ErrorCode = 0
	// 无效参数
	ErrorCode_INVALID_PARAMETER ErrorCode = 1
	// 频率限制
	ErrorCode_RATE_LIMITED ErrorCode = 2
	// 模板未找到
	ErrorCode_TEMPLATE_NOT_FOUND ErrorCode = 3
	// 渠道被禁用
	ErrorCode_CHANNEL_DISABLED ErrorCode = 4
	// 创建通知失败
	ErrorCode_CREATE_NOTIFICATION_FAILED ErrorCode = 5
	// 业务ID未找到
	ErrorCode_BIZ_ID_NOT_FOUND ErrorCode = 6
	// 通知未找到
	ErrorCode_NOTIFICATION_NOT_FOUND ErrorCode = 7
	// 无可用供应商
	ErrorCode_NO_AVAILABLE_PROVIDER ErrorCode = 8
	// 无可用渠道
	ErrorCode_NO_AVAILABLE_CHANNEL ErrorCode = 9
	// 发送通知失败
	ErrorCode_SEND_NOTIFICATION_FAILED ErrorCode = 10
	// 业务配置不存在
	ErrorCode_CONFIG_NOT_FOUND ErrorCode = 11
	// 没有提供配额相关配置
	ErrorCode_NO_QUOTA_CONFIG ErrorCode = 12
	// 额度已用完
	ErrorCode_NO_QUOTA ErrorCode = 13
	// 额度记录不存在
	ErrorCode_QUOTA_NOT_FOUND ErrorCode = 14
	// 供应商记录不存在
	ErrorCode_PROVIDER_NOT_FOUND ErrorCode = 15
	// 未知渠道类型
	ErrorCode_UNKNOWN_CHANNEL ErrorCode = 16
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:  "ERROR_CODE_UNSPECIFIED",
		1:  "INVALID_PARAMETER",
		2:  "RATE_LIMITED",
		3:  "TEMPLATE_NOT_FOUND",
		4:  "CHANNEL_DISABLED",
		5:  "CREATE_NOTIFICATION_FAILED",
		6:  "BIZ_ID_NOT_FOUND",
		7:  "NOTIFICATION_NOT_FOUND",
		8:  "NO_AVAILABLE_PROVIDER",
		9:  "NO_AVAILABLE_CHANNEL",
		10: "SEND_NOTIFICATION_FAILED",
		11: "CONFIG_NOT_FOUND",
		12: "NO_QUOTA_CONFIG",
		13: "NO_QUOTA",
		14: "QUOTA_NOT_FOUND",
		15: "PROVIDER_NOT_FOUND",
		16: "UNKNOWN_CHANNEL",
	}
	ErrorCode_value = map[string]int32{
		"ERROR_CODE_UNSPECIFIED":     0,
		"INVALID_PARAMETER":          1,
		"RATE_LIMITED":               2,
		"TEMPLATE_NOT_FOUND":         3,
		"CHANNEL_DISABLED":           4,
		"CREATE_NOTIFICATION_FAILED": 5,
		"BIZ_ID_NOT_FOUND":           6,
		"NOTIFICATION_NOT_FOUND":     7,
		"NO_AVAILABLE_PROVIDER":      8,
		"NO_AVAILABLE_CHANNEL":       9,
		"SEND_NOTIFICATION_FAILED":   10,
		"CONFIG_NOT_FOUND":           11,
		"NO_QUOTA_CONFIG":            12,
		"NO_QUOTA":                   13,
		"QUOTA_NOT_FOUND":            14,
		"PROVIDER_NOT_FOUND":         15,
		"UNKNOWN_CHANNEL":            16,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_notification_v1_notification_proto_enumTypes[2].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_notification_v1_notification_proto_enumTypes[2]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{2}
}

// 通知发送策略定义
type SendStrategy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to StrategyType:
	//
	//	*SendStrategy_Immediate
	//	*SendStrategy_Delayed
	//	*SendStrategy_Scheduled
	//	*SendStrategy_TimeWindow
	//	*SendStrategy_Deadline
	StrategyType  isSendStrategy_StrategyType `protobuf_oneof:"strategy_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendStrategy) Reset() {
	*x = SendStrategy{}
	mi := &file_notification_v1_notification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendStrategy) ProtoMessage() {}

func (x *SendStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendStrategy.ProtoReflect.Descriptor instead.
func (*SendStrategy) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{0}
}

func (x *SendStrategy) GetStrategyType() isSendStrategy_StrategyType {
	if x != nil {
		return x.StrategyType
	}
	return nil
}

func (x *SendStrategy) GetImmediate() *SendStrategy_ImmediateStrategy {
	if x != nil {
		if x, ok := x.StrategyType.(*SendStrategy_Immediate); ok {
			return x.Immediate
		}
	}
	return nil
}

func (x *SendStrategy) GetDelayed() *SendStrategy_DelayedStrategy {
	if x != nil {
		if x, ok := x.StrategyType.(*SendStrategy_Delayed); ok {
			return x.Delayed
		}
	}
	return nil
}

func (x *SendStrategy) GetScheduled() *SendStrategy_ScheduledStrategy {
	if x != nil {
		if x, ok := x.StrategyType.(*SendStrategy_Scheduled); ok {
			return x.Scheduled
		}
	}
	return nil
}

func (x *SendStrategy) GetTimeWindow() *SendStrategy_TimeWindowStrategy {
	if x != nil {
		if x, ok := x.StrategyType.(*SendStrategy_TimeWindow); ok {
			return x.TimeWindow
		}
	}
	return nil
}

func (x *SendStrategy) GetDeadline() *SendStrategy_DeadlineStrategy {
	if x != nil {
		if x, ok := x.StrategyType.(*SendStrategy_Deadline); ok {
			return x.Deadline
		}
	}
	return nil
}

type isSendStrategy_StrategyType interface {
	isSendStrategy_StrategyType()
}

type SendStrategy_Immediate struct {
	// 立即发送
	Immediate *SendStrategy_ImmediateStrategy `protobuf:"bytes,1,opt,name=immediate,proto3,oneof"`
}

type SendStrategy_Delayed struct {
	// 延迟发送
	Delayed *SendStrategy_DelayedStrategy `protobuf:"bytes,2,opt,name=delayed,proto3,oneof"`
}

type SendStrategy_Scheduled struct {
	// 定时发送
	Scheduled *SendStrategy_ScheduledStrategy `protobuf:"bytes,3,opt,name=scheduled,proto3,oneof"`
}

type SendStrategy_TimeWindow struct {
	// 时间窗口内发送
	TimeWindow *SendStrategy_TimeWindowStrategy `protobuf:"bytes,4,opt,name=time_window,json=timeWindow,proto3,oneof"`
}

type SendStrategy_Deadline struct {
	// 截止日期前发送
	Deadline *SendStrategy_DeadlineStrategy `protobuf:"bytes,5,opt,name=deadline,proto3,oneof"`
}

func (*SendStrategy_Immediate) isSendStrategy_StrategyType() {}

func (*SendStrategy_Delayed) isSendStrategy_StrategyType() {}

func (*SendStrategy_Scheduled) isSendStrategy_StrategyType() {}

func (*SendStrategy_TimeWindow) isSendStrategy_StrategyType() {}

func (*SendStrategy_Deadline) isSendStrategy_StrategyType() {}

// 通知
type Notification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 业务方某个业务内部的唯一标识
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// 接收者标识(可以是用户ID、邮箱、手机号等)
	Receivers []string `protobuf:"bytes,2,rep,name=receivers,proto3" json:"receivers,omitempty"`
	// 发送渠道
	Channel Channel `protobuf:"varint,3,opt,name=channel,proto3,enum=notification.v1.Channel" json:"channel,omitempty"`
	// 模板ID
	TemplateId string `protobuf:"bytes,4,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	// v0.0.1 v0.0.2
	// template_version = 5;
	// 模板参数
	TemplateParams map[string]string `protobuf:"bytes,5,rep,name=template_params,json=templateParams,proto3" json:"template_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 发送策略
	Strategy *SendStrategy `protobuf:"bytes,6,opt,name=strategy,proto3" json:"strategy,omitempty"`
	// 只能往后加
	// string field1 = 7;
	// string field2 = 8;
	// 重要，并且几乎大家都要传
	// string importantField = 2;
	Receiver      string `protobuf:"bytes,7,opt,name=receiver,proto3" json:"receiver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Notification) Reset() {
	*x = Notification{}
	mi := &file_notification_v1_notification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{1}
}

func (x *Notification) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Notification) GetReceivers() []string {
	if x != nil {
		return x.Receivers
	}
	return nil
}

func (x *Notification) GetChannel() Channel {
	if x != nil {
		return x.Channel
	}
	return Channel_CHANNEL_UNSPECIFIED
}

func (x *Notification) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *Notification) GetTemplateParams() map[string]string {
	if x != nil {
		return x.TemplateParams
	}
	return nil
}

func (x *Notification) GetStrategy() *SendStrategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

func (x *Notification) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

// 同步单条发送通知请求
type SendNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notification  *Notification          `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationRequest) Reset() {
	*x = SendNotificationRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationRequest) ProtoMessage() {}

func (x *SendNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{2}
}

func (x *SendNotificationRequest) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

// 同步单条发送通知响应
type SendNotificationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 通知平台生成的通知ID
	NotificationId uint64 `protobuf:"varint,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	// 发送状态
	Status SendStatus `protobuf:"varint,2,opt,name=status,proto3,enum=notification.v1.SendStatus" json:"status,omitempty"`
	// 失败时的错误代码
	ErrorCode ErrorCode `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3,enum=notification.v1.ErrorCode" json:"error_code,omitempty"`
	// 错误详情
	ErrorMessage  string `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationResponse) Reset() {
	*x = SendNotificationResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationResponse) ProtoMessage() {}

func (x *SendNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationResponse.ProtoReflect.Descriptor instead.
func (*SendNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{3}
}

func (x *SendNotificationResponse) GetNotificationId() uint64 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

func (x *SendNotificationResponse) GetStatus() SendStatus {
	if x != nil {
		return x.Status
	}
	return SendStatus_SEND_STATUS_UNSPECIFIED
}

func (x *SendNotificationResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ERROR_CODE_UNSPECIFIED
}

func (x *SendNotificationResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// 异步单条发送通知请求
type SendNotificationAsyncRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notification  *Notification          `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationAsyncRequest) Reset() {
	*x = SendNotificationAsyncRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationAsyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationAsyncRequest) ProtoMessage() {}

func (x *SendNotificationAsyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationAsyncRequest.ProtoReflect.Descriptor instead.
func (*SendNotificationAsyncRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{4}
}

func (x *SendNotificationAsyncRequest) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

// 异步单条发送通知响应
type SendNotificationAsyncResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 通知平台生成的通知ID
	NotificationId uint64 `protobuf:"varint,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	// 失败时的错误代码
	ErrorCode ErrorCode `protobuf:"varint,4,opt,name=error_code,json=errorCode,proto3,enum=notification.v1.ErrorCode" json:"error_code,omitempty"`
	// 错误详情
	ErrorMessage  string `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationAsyncResponse) Reset() {
	*x = SendNotificationAsyncResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationAsyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationAsyncResponse) ProtoMessage() {}

func (x *SendNotificationAsyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationAsyncResponse.ProtoReflect.Descriptor instead.
func (*SendNotificationAsyncResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{5}
}

func (x *SendNotificationAsyncResponse) GetNotificationId() uint64 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

func (x *SendNotificationAsyncResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ERROR_CODE_UNSPECIFIED
}

func (x *SendNotificationAsyncResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// 同步批量发送通知请求
type BatchSendNotificationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notifications []*Notification        `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchSendNotificationsRequest) Reset() {
	*x = BatchSendNotificationsRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchSendNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSendNotificationsRequest) ProtoMessage() {}

func (x *BatchSendNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSendNotificationsRequest.ProtoReflect.Descriptor instead.
func (*BatchSendNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{6}
}

func (x *BatchSendNotificationsRequest) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

// 同步批量发送通知响应
type BatchSendNotificationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 所有结果
	Results []*SendNotificationResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	// 总数
	TotalCount int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// 成功数
	SuccessCount  int32 `protobuf:"varint,3,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchSendNotificationsResponse) Reset() {
	*x = BatchSendNotificationsResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchSendNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSendNotificationsResponse) ProtoMessage() {}

func (x *BatchSendNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSendNotificationsResponse.ProtoReflect.Descriptor instead.
func (*BatchSendNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{7}
}

func (x *BatchSendNotificationsResponse) GetResults() []*SendNotificationResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *BatchSendNotificationsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *BatchSendNotificationsResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

// 异步批量发送通知请求
type BatchSendNotificationsAsyncRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notifications []*Notification        `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchSendNotificationsAsyncRequest) Reset() {
	*x = BatchSendNotificationsAsyncRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchSendNotificationsAsyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSendNotificationsAsyncRequest) ProtoMessage() {}

func (x *BatchSendNotificationsAsyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSendNotificationsAsyncRequest.ProtoReflect.Descriptor instead.
func (*BatchSendNotificationsAsyncRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{8}
}

func (x *BatchSendNotificationsAsyncRequest) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

// 异步批量发送通知响应
type BatchSendNotificationsAsyncResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 通知平台生成的通知ID
	NotificationIds []uint64 `protobuf:"varint,1,rep,packed,name=notification_ids,json=notificationIds,proto3" json:"notification_ids,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BatchSendNotificationsAsyncResponse) Reset() {
	*x = BatchSendNotificationsAsyncResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchSendNotificationsAsyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSendNotificationsAsyncResponse) ProtoMessage() {}

func (x *BatchSendNotificationsAsyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSendNotificationsAsyncResponse.ProtoReflect.Descriptor instead.
func (*BatchSendNotificationsAsyncResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{9}
}

func (x *BatchSendNotificationsAsyncResponse) GetNotificationIds() []uint64 {
	if x != nil {
		return x.NotificationIds
	}
	return nil
}

// 准备事务请求
type TxPrepareRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notification  *Notification          `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxPrepareRequest) Reset() {
	*x = TxPrepareRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxPrepareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxPrepareRequest) ProtoMessage() {}

func (x *TxPrepareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxPrepareRequest.ProtoReflect.Descriptor instead.
func (*TxPrepareRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{10}
}

func (x *TxPrepareRequest) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

// 准备事务响应
type TxPrepareResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxPrepareResponse) Reset() {
	*x = TxPrepareResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxPrepareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxPrepareResponse) ProtoMessage() {}

func (x *TxPrepareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxPrepareResponse.ProtoReflect.Descriptor instead.
func (*TxPrepareResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{11}
}

// 提交事务请求
type TxCommitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"` // 事务唯一标识
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxCommitRequest) Reset() {
	*x = TxCommitRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxCommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxCommitRequest) ProtoMessage() {}

func (x *TxCommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxCommitRequest.ProtoReflect.Descriptor instead.
func (*TxCommitRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{12}
}

func (x *TxCommitRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// 提交事务响应
type TxCommitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxCommitResponse) Reset() {
	*x = TxCommitResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxCommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxCommitResponse) ProtoMessage() {}

func (x *TxCommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxCommitResponse.ProtoReflect.Descriptor instead.
func (*TxCommitResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{13}
}

// 回滚事务请求
type TxCancelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"` // 事务唯一标识
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxCancelRequest) Reset() {
	*x = TxCancelRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxCancelRequest) ProtoMessage() {}

func (x *TxCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxCancelRequest.ProtoReflect.Descriptor instead.
func (*TxCancelRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{14}
}

func (x *TxCancelRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// 回滚事务响应
type TxCancelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxCancelResponse) Reset() {
	*x = TxCancelResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxCancelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxCancelResponse) ProtoMessage() {}

func (x *TxCancelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxCancelResponse.ProtoReflect.Descriptor instead.
func (*TxCancelResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{15}
}

// 空结构表示立即发送
type SendStrategy_ImmediateStrategy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendStrategy_ImmediateStrategy) Reset() {
	*x = SendStrategy_ImmediateStrategy{}
	mi := &file_notification_v1_notification_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendStrategy_ImmediateStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendStrategy_ImmediateStrategy) ProtoMessage() {}

func (x *SendStrategy_ImmediateStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendStrategy_ImmediateStrategy.ProtoReflect.Descriptor instead.
func (*SendStrategy_ImmediateStrategy) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{0, 0}
}

type SendStrategy_DelayedStrategy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 延迟秒数
	DelaySeconds  int64 `protobuf:"varint,1,opt,name=delay_seconds,json=delaySeconds,proto3" json:"delay_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendStrategy_DelayedStrategy) Reset() {
	*x = SendStrategy_DelayedStrategy{}
	mi := &file_notification_v1_notification_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendStrategy_DelayedStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendStrategy_DelayedStrategy) ProtoMessage() {}

func (x *SendStrategy_DelayedStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendStrategy_DelayedStrategy.ProtoReflect.Descriptor instead.
func (*SendStrategy_DelayedStrategy) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{0, 1}
}

func (x *SendStrategy_DelayedStrategy) GetDelaySeconds() int64 {
	if x != nil {
		return x.DelaySeconds
	}
	return 0
}

type SendStrategy_ScheduledStrategy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 具体发送时间
	SendTime      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendStrategy_ScheduledStrategy) Reset() {
	*x = SendStrategy_ScheduledStrategy{}
	mi := &file_notification_v1_notification_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendStrategy_ScheduledStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendStrategy_ScheduledStrategy) ProtoMessage() {}

func (x *SendStrategy_ScheduledStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendStrategy_ScheduledStrategy.ProtoReflect.Descriptor instead.
func (*SendStrategy_ScheduledStrategy) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{0, 2}
}

func (x *SendStrategy_ScheduledStrategy) GetSendTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SendTime
	}
	return nil
}

type SendStrategy_TimeWindowStrategy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 开始时间
	StartTimeMilliseconds int64 `protobuf:"varint,1,opt,name=start_time_milliseconds,json=startTimeMilliseconds,proto3" json:"start_time_milliseconds,omitempty"`
	// 结束时间
	EndTimeMilliseconds int64 `protobuf:"varint,2,opt,name=end_time_milliseconds,json=endTimeMilliseconds,proto3" json:"end_time_milliseconds,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SendStrategy_TimeWindowStrategy) Reset() {
	*x = SendStrategy_TimeWindowStrategy{}
	mi := &file_notification_v1_notification_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendStrategy_TimeWindowStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendStrategy_TimeWindowStrategy) ProtoMessage() {}

func (x *SendStrategy_TimeWindowStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendStrategy_TimeWindowStrategy.ProtoReflect.Descriptor instead.
func (*SendStrategy_TimeWindowStrategy) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{0, 3}
}

func (x *SendStrategy_TimeWindowStrategy) GetStartTimeMilliseconds() int64 {
	if x != nil {
		return x.StartTimeMilliseconds
	}
	return 0
}

func (x *SendStrategy_TimeWindowStrategy) GetEndTimeMilliseconds() int64 {
	if x != nil {
		return x.EndTimeMilliseconds
	}
	return 0
}

type SendStrategy_DeadlineStrategy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 截止日期
	Deadline      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=deadline,proto3" json:"deadline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendStrategy_DeadlineStrategy) Reset() {
	*x = SendStrategy_DeadlineStrategy{}
	mi := &file_notification_v1_notification_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendStrategy_DeadlineStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendStrategy_DeadlineStrategy) ProtoMessage() {}

func (x *SendStrategy_DeadlineStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendStrategy_DeadlineStrategy.ProtoReflect.Descriptor instead.
func (*SendStrategy_DeadlineStrategy) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{0, 4}
}

func (x *SendStrategy_DeadlineStrategy) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

var File_notification_v1_notification_proto protoreflect.FileDescriptor

const file_notification_v1_notification_proto_rawDesc = "" +
	"\n" +
	"\"notification/v1/notification.proto\x12\x0fnotification.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x99\x06\n" +
	"\fSendStrategy\x12O\n" +
	"\timmediate\x18\x01 \x01(\v2/.notification.v1.SendStrategy.ImmediateStrategyH\x00R\timmediate\x12I\n" +
	"\adelayed\x18\x02 \x01(\v2-.notification.v1.SendStrategy.DelayedStrategyH\x00R\adelayed\x12O\n" +
	"\tscheduled\x18\x03 \x01(\v2/.notification.v1.SendStrategy.ScheduledStrategyH\x00R\tscheduled\x12S\n" +
	"\vtime_window\x18\x04 \x01(\v20.notification.v1.SendStrategy.TimeWindowStrategyH\x00R\n" +
	"timeWindow\x12L\n" +
	"\bdeadline\x18\x05 \x01(\v2..notification.v1.SendStrategy.DeadlineStrategyH\x00R\bdeadline\x1a\x13\n" +
	"\x11ImmediateStrategy\x1a6\n" +
	"\x0fDelayedStrategy\x12#\n" +
	"\rdelay_seconds\x18\x01 \x01(\x03R\fdelaySeconds\x1aL\n" +
	"\x11ScheduledStrategy\x127\n" +
	"\tsend_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\bsendTime\x1a\x80\x01\n" +
	"\x12TimeWindowStrategy\x126\n" +
	"\x17start_time_milliseconds\x18\x01 \x01(\x03R\x15startTimeMilliseconds\x122\n" +
	"\x15end_time_milliseconds\x18\x02 \x01(\x03R\x13endTimeMilliseconds\x1aJ\n" +
	"\x10DeadlineStrategy\x126\n" +
	"\bdeadline\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\bdeadlineB\x0f\n" +
	"\rstrategy_type\"\x89\x03\n" +
	"\fNotification\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1c\n" +
	"\treceivers\x18\x02 \x03(\tR\treceivers\x122\n" +
	"\achannel\x18\x03 \x01(\x0e2\x18.notification.v1.ChannelR\achannel\x12\x1f\n" +
	"\vtemplate_id\x18\x04 \x01(\tR\n" +
	"templateId\x12Z\n" +
	"\x0ftemplate_params\x18\x05 \x03(\v21.notification.v1.Notification.TemplateParamsEntryR\x0etemplateParams\x129\n" +
	"\bstrategy\x18\x06 \x01(\v2\x1d.notification.v1.SendStrategyR\bstrategy\x12\x1a\n" +
	"\breceiver\x18\a \x01(\tR\breceiver\x1aA\n" +
	"\x13TemplateParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\\\n" +
	"\x17SendNotificationRequest\x12A\n" +
	"\fnotification\x18\x01 \x01(\v2\x1d.notification.v1.NotificationR\fnotification\"\xd8\x01\n" +
	"\x18SendNotificationResponse\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\x04R\x0enotificationId\x123\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1b.notification.v1.SendStatusR\x06status\x129\n" +
	"\n" +
	"error_code\x18\x03 \x01(\x0e2\x1a.notification.v1.ErrorCodeR\terrorCode\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"a\n" +
	"\x1cSendNotificationAsyncRequest\x12A\n" +
	"\fnotification\x18\x01 \x01(\v2\x1d.notification.v1.NotificationR\fnotification\"\xa8\x01\n" +
	"\x1dSendNotificationAsyncResponse\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\x04R\x0enotificationId\x129\n" +
	"\n" +
	"error_code\x18\x04 \x01(\x0e2\x1a.notification.v1.ErrorCodeR\terrorCode\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\"d\n" +
	"\x1dBatchSendNotificationsRequest\x12C\n" +
	"\rnotifications\x18\x01 \x03(\v2\x1d.notification.v1.NotificationR\rnotifications\"\xab\x01\n" +
	"\x1eBatchSendNotificationsResponse\x12C\n" +
	"\aresults\x18\x01 \x03(\v2).notification.v1.SendNotificationResponseR\aresults\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12#\n" +
	"\rsuccess_count\x18\x03 \x01(\x05R\fsuccessCount\"i\n" +
	"\"BatchSendNotificationsAsyncRequest\x12C\n" +
	"\rnotifications\x18\x01 \x03(\v2\x1d.notification.v1.NotificationR\rnotifications\"P\n" +
	"#BatchSendNotificationsAsyncResponse\x12)\n" +
	"\x10notification_ids\x18\x01 \x03(\x04R\x0fnotificationIds\"U\n" +
	"\x10TxPrepareRequest\x12A\n" +
	"\fnotification\x18\x01 \x01(\v2\x1d.notification.v1.NotificationR\fnotification\"\x13\n" +
	"\x11TxPrepareResponse\"#\n" +
	"\x0fTxCommitRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\"\x12\n" +
	"\x10TxCommitResponse\"#\n" +
	"\x0fTxCancelRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\"\x12\n" +
	"\x10TxCancelResponse*B\n" +
	"\aChannel\x12\x17\n" +
	"\x13CHANNEL_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03SMS\x10\x01\x12\t\n" +
	"\x05EMAIL\x10\x02\x12\n" +
	"\n" +
	"\x06IN_APP\x10\x03*l\n" +
	"\n" +
	"SendStatus\x12\x1b\n" +
	"\x17SEND_STATUS_UNSPECIFIED\x10\x00\x12\v\n" +
	"\aPREPARE\x10\x01\x12\f\n" +
	"\bCANCELED\x10\x02\x12\v\n" +
	"\aPENDING\x10\x03\x12\r\n" +
	"\tSUCCEEDED\x10\x04\x12\n" +
	"\n" +
	"\x06FAILED\x10\x05*\x9e\x03\n" +
	"\tErrorCode\x12\x1a\n" +
	"\x16ERROR_CODE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11INVALID_PARAMETER\x10\x01\x12\x10\n" +
	"\fRATE_LIMITED\x10\x02\x12\x16\n" +
	"\x12TEMPLATE_NOT_FOUND\x10\x03\x12\x14\n" +
	"\x10CHANNEL_DISABLED\x10\x04\x12\x1e\n" +
	"\x1aCREATE_NOTIFICATION_FAILED\x10\x05\x12\x14\n" +
	"\x10BIZ_ID_NOT_FOUND\x10\x06\x12\x1a\n" +
	"\x16NOTIFICATION_NOT_FOUND\x10\a\x12\x19\n" +
	"\x15NO_AVAILABLE_PROVIDER\x10\b\x12\x18\n" +
	"\x14NO_AVAILABLE_CHANNEL\x10\t\x12\x1c\n" +
	"\x18SEND_NOTIFICATION_FAILED\x10\n" +
	"\x12\x14\n" +
	"\x10CONFIG_NOT_FOUND\x10\v\x12\x13\n" +
	"\x0fNO_QUOTA_CONFIG\x10\f\x12\f\n" +
	"\bNO_QUOTA\x10\r\x12\x13\n" +
	"\x0fQUOTA_NOT_FOUND\x10\x0e\x12\x16\n" +
	"\x12PROVIDER_NOT_FOUND\x10\x0f\x12\x13\n" +
	"\x0fUNKNOWN_CHANNEL\x10\x102\xf2\x05\n" +
	"\x13NotificationService\x12g\n" +
	"\x10SendNotification\x12(.notification.v1.SendNotificationRequest\x1a).notification.v1.SendNotificationResponse\x12v\n" +
	"\x15SendNotificationAsync\x12-.notification.v1.SendNotificationAsyncRequest\x1a..notification.v1.SendNotificationAsyncResponse\x12y\n" +
	"\x16BatchSendNotifications\x12..notification.v1.BatchSendNotificationsRequest\x1a/.notification.v1.BatchSendNotificationsResponse\x12\x88\x01\n" +
	"\x1bBatchSendNotificationsAsync\x123.notification.v1.BatchSendNotificationsAsyncRequest\x1a4.notification.v1.BatchSendNotificationsAsyncResponse\x12R\n" +
	"\tTxPrepare\x12!.notification.v1.TxPrepareRequest\x1a\".notification.v1.TxPrepareResponse\x12O\n" +
	"\bTxCommit\x12 .notification.v1.TxCommitRequest\x1a!.notification.v1.TxCommitResponse\x12O\n" +
	"\bTxCancel\x12 .notification.v1.TxCancelRequest\x1a!.notification.v1.TxCancelResponseBQZOgithub.com/serendipityConfusion/notification-platform/api/gen/v1;notificationpbb\x06proto3"

var (
	file_notification_v1_notification_proto_rawDescOnce sync.Once
	file_notification_v1_notification_proto_rawDescData []byte
)

func file_notification_v1_notification_proto_rawDescGZIP() []byte {
	file_notification_v1_notification_proto_rawDescOnce.Do(func() {
		file_notification_v1_notification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_notification_v1_notification_proto_rawDesc), len(file_notification_v1_notification_proto_rawDesc)))
	})
	return file_notification_v1_notification_proto_rawDescData
}

var file_notification_v1_notification_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_notification_v1_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_notification_v1_notification_proto_goTypes = []any{
	(Channel)(0),                                // 0: notification.v1.Channel
	(SendStatus)(0),                             // 1: notification.v1.SendStatus
	(ErrorCode)(0),                              // 2: notification.v1.ErrorCode
	(*SendStrategy)(nil),                        // 3: notification.v1.SendStrategy
	(*Notification)(nil),                        // 4: notification.v1.Notification
	(*SendNotificationRequest)(nil),             // 5: notification.v1.SendNotificationRequest
	(*SendNotificationResponse)(nil),            // 6: notification.v1.SendNotificationResponse
	(*SendNotificationAsyncRequest)(nil),        // 7: notification.v1.SendNotificationAsyncRequest
	(*SendNotificationAsyncResponse)(nil),       // 8: notification.v1.SendNotificationAsyncResponse
	(*BatchSendNotificationsRequest)(nil),       // 9: notification.v1.BatchSendNotificationsRequest
	(*BatchSendNotificationsResponse)(nil),      // 10: notification.v1.BatchSendNotificationsResponse
	(*BatchSendNotificationsAsyncRequest)(nil),  // 11: notification.v1.BatchSendNotificationsAsyncRequest
	(*BatchSendNotificationsAsyncResponse)(nil), // 12: notification.v1.BatchSendNotificationsAsyncResponse
	(*TxPrepareRequest)(nil),                    // 13: notification.v1.TxPrepareRequest
	(*TxPrepareResponse)(nil),                   // 14: notification.v1.TxPrepareResponse
	(*TxCommitRequest)(nil),                     // 15: notification.v1.TxCommitRequest
	(*TxCommitResponse)(nil),                    // 16: notification.v1.TxCommitResponse
	(*TxCancelRequest)(nil),                     // 17: notification.v1.TxCancelRequest
	(*TxCancelResponse)(nil),                    // 18: notification.v1.TxCancelResponse
	(*SendStrategy_ImmediateStrategy)(nil),      // 19: notification.v1.SendStrategy.ImmediateStrategy
	(*SendStrategy_DelayedStrategy)(nil),        // 20: notification.v1.SendStrategy.DelayedStrategy
	(*SendStrategy_ScheduledStrategy)(nil),      // 21: notification.v1.SendStrategy.ScheduledStrategy
	(*SendStrategy_TimeWindowStrategy)(nil),     // 22: notification.v1.SendStrategy.TimeWindowStrategy
	(*SendStrategy_DeadlineStrategy)(nil),       // 23: notification.v1.SendStrategy.DeadlineStrategy
	nil,                                         // 24: notification.v1.Notification.TemplateParamsEntry
	(*timestamppb.Timestamp)(nil),               // 25: google.protobuf.Timestamp
}
var file_notification_v1_notification_proto_depIdxs = []int32{
	19, // 0: notification.v1.SendStrategy.immediate:type_name -> notification.v1.SendStrategy.ImmediateStrategy
	20, // 1: notification.v1.SendStrategy.delayed:type_name -> notification.v1.SendStrategy.DelayedStrategy
	21, // 2: notification.v1.SendStrategy.scheduled:type_name -> notification.v1.SendStrategy.ScheduledStrategy
	22, // 3: notification.v1.SendStrategy.time_window:type_name -> notification.v1.SendStrategy.TimeWindowStrategy
	23, // 4: notification.v1.SendStrategy.deadline:type_name -> notification.v1.SendStrategy.DeadlineStrategy
	0,  // 5: notification.v1.Notification.channel:type_name -> notification.v1.Channel
	24, // 6: notification.v1.Notification.template_params:type_name -> notification.v1.Notification.TemplateParamsEntry
	3,  // 7: notification.v1.Notification.strategy:type_name -> notification.v1.SendStrategy
	4,  // 8: notification.v1.SendNotificationRequest.notification:type_name -> notification.v1.Notification
	1,  // 9: notification.v1.SendNotificationResponse.status:type_name -> notification.v1.SendStatus
	2,  // 10: notification.v1.SendNotificationResponse.error_code:type_name -> notification.v1.ErrorCode
	4,  // 11: notification.v1.SendNotificationAsyncRequest.notification:type_name -> notification.v1.Notification
	2,  // 12: notification.v1.SendNotificationAsyncResponse.error_code:type_name -> notification.v1.ErrorCode
	4,  // 13: notification.v1.BatchSendNotificationsRequest.notifications:type_name -> notification.v1.Notification
	6,  // 14: notification.v1.BatchSendNotificationsResponse.results:type_name -> notification.v1.SendNotificationResponse
	4,  // 15: notification.v1.BatchSendNotificationsAsyncRequest.notifications:type_name -> notification.v1.Notification
	4,  // 16: notification.v1.TxPrepareRequest.notification:type_name -> notification.v1.Notification
	25, // 17: notification.v1.SendStrategy.ScheduledStrategy.send_time:type_name -> google.protobuf.Timestamp
	25, // 18: notification.v1.SendStrategy.DeadlineStrategy.deadline:type_name -> google.protobuf.Timestamp
	5,  // 19: notification.v1.NotificationService.SendNotification:input_type -> notification.v1.SendNotificationRequest
	7,  // 20: notification.v1.NotificationService.SendNotificationAsync:input_type -> notification.v1.SendNotificationAsyncRequest
	9,  // 21: notification.v1.NotificationService.BatchSendNotifications:input_type -> notification.v1.BatchSendNotificationsRequest
	11, // 22: notification.v1.NotificationService.BatchSendNotificationsAsync:input_type -> notification.v1.BatchSendNotificationsAsyncRequest
	13, // 23: notification.v1.NotificationService.TxPrepare:input_type -> notification.v1.TxPrepareRequest
	15, // 24: notification.v1.NotificationService.TxCommit:input_type -> notification.v1.TxCommitRequest
	17, // 25: notification.v1.NotificationService.TxCancel:input_type -> notification.v1.TxCancelRequest
	6,  // 26: notification.v1.NotificationService.SendNotification:output_type -> notification.v1.SendNotificationResponse
	8,  // 27: notification.v1.NotificationService.SendNotificationAsync:output_type -> notification.v1.SendNotificationAsyncResponse
	10, // 28: notification.v1.NotificationService.BatchSendNotifications:output_type -> notification.v1.BatchSendNotificationsResponse
	12, // 29: notification.v1.NotificationService.BatchSendNotificationsAsync:output_type -> notification.v1.BatchSendNotificationsAsyncResponse
	14, // 30: notification.v1.NotificationService.TxPrepare:output_type -> notification.v1.TxPrepareResponse
	16, // 31: notification.v1.NotificationService.TxCommit:output_type -> notification.v1.TxCommitResponse
	18, // 32: notification.v1.NotificationService.TxCancel:output_type -> notification.v1.TxCancelResponse
	26, // [26:33] is the sub-list for method output_type
	19, // [19:26] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_notification_v1_notification_proto_init() }
func file_notification_v1_notification_proto_init() {
	if File_notification_v1_notification_proto != nil {
		return
	}
	file_notification_v1_notification_proto_msgTypes[0].OneofWrappers = []any{
		(*SendStrategy_Immediate)(nil),
		(*SendStrategy_Delayed)(nil),
		(*SendStrategy_Scheduled)(nil),
		(*SendStrategy_TimeWindow)(nil),
		(*SendStrategy_Deadline)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_notification_v1_notification_proto_rawDesc), len(file_notification_v1_notification_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notification_v1_notification_proto_goTypes,
		DependencyIndexes: file_notification_v1_notification_proto_depIdxs,
		EnumInfos:         file_notification_v1_notification_proto_enumTypes,
		MessageInfos:      file_notification_v1_notification_proto_msgTypes,
	}.Build()
	File_notification_v1_notification_proto = out.File
	file_notification_v1_notification_proto_goTypes = nil
	file_notification_v1_notification_proto_depIdxs = nil
}
